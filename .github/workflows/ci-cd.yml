name: CI/CD Pipeline

on:
  push:
    branches:
      - 'feature*' # Trigger on pushes to branches starting with 'feature'
  create:
    tags:
      - '**' # Trigger on any tag creation

jobs:
  test:
    runs-on: self-hosted
    if: ${{ startsWith(github.ref, 'refs/heads/feature') || startsWith(github.ref, 'refs/tags/') }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests
        run: ./gradlew test

      - name: Allow Merge to Main
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/feature') && success() }}
        run: |
          echo "Tests passed, merge to main branch is allowed."
        # This step is for informational purposes; actual merge rules should be handled in branch protection settings

  deploy:
    needs: test
    if: ${{ github.event_name == 'create' && startsWith(github.ref, 'refs/tags/') && success() }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        run: ./gradlew build

      - name: Publish to GitHub Packages
        run: ./gradlew publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}
