name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: development

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Update version in build.gradle
        run: |
          sed -i "s/version = '.*'/version = '${{ github.event.inputs.version }}'/" build.gradle

      - name: Create release branch from development
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git fetch origin
          git checkout -b release/${{ github.event.inputs.version }} origin/development
          git add build.gradle
          git commit -m "Release version ${{ github.event.inputs.version }}"
          git push origin release/${{ github.event.inputs.version }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: release/${{ github.event.inputs.version }}
          title: 'Release ${{ github.event.inputs.version }}'
          body: 'Release version ${{ github.event.inputs.version }}'

      - name: Create tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/kratos-backend

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}